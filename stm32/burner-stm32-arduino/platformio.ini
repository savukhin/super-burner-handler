; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:only_unit_test]
framework = arduino
platform = atmelavr
board = uno
; platform = espressif32
; board = esp32dev

; build_flags= -D __UNO__ -std=c++11
; build_unflags = -std=c++98
; correctly search chained libraries
; lib_ldf_mode = chain+
; lib_deps = 
;     ustd
; build_flags = -std=c++11


; build_flags = -std=gnu++17
; build_unflags = -std=gnu++11
; platform_packages = 
;     toolchain-atmelavr@1.70300.191015


; test_speed = 115200
; build_flags = 
;     std=c++11
;     std=gnu++11

; lib_ldf_mode = deep
; lib_deps =
;     string

test_framework = googletest

platform_packages =
    platformio/tool-simavr
test_speed = 9600
test_testing_command =
    ${platformio.packages_dir}/tool-simavr/bin/simavr
    -m
    atmega328p
    -f
    16000000L
    ${platformio.build_dir}/${this.__env__}/firmware.elf

    
[env_common]
framework = arduino
monitor_speed = 115200

[env:genericEsp32Wroom]
extends = env_common
platform = espressif32
board = esp32dev
upload_protocol = serial

build_flags = 
    -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
    -D USBCON
    -D TARGET_ESP32_WROOM


[env:genericSTM32F103C8]
extends = env_common
platform = ststm32
board = genericSTM32F103C8

; upload_protocol = serial
; upload_port = COM8

; upload_protocol = dfu
; monitor_dtr = 1
build_flags = 
    -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
    -D USBCON
    -D TARGET_BLUEPILL

test_framework = unity
upload_protocol = custom
upload_command = echo "Fuck you"
; upload_command = sleep 0.1